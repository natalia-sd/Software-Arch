# openapi: '3.0.0'
# info:
#   version: '1.0.0'
#   title: 'Software-Arch Lab Example API'
#   description: Пример API для первого (2го) домашнего задания по курсу Архитектура ПО
# servers:
#   - url: http://localhost:8080
#     description: Example server
# paths:
#   /search:
#     get:
#       summary: Поиск пользователей по маске имени и фамилии
#       parameters:
#       - name: first_name
#         description: Имя
#         in: query
#         required: false
#         schema:
#           type: string
#       - name: last_name
#         description: Фамилия
#         in: query
#         required: true
#         schema:
#           type: string 
#       responses:
#         '200':
#           description: Found users for the provided masks
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/schemas/users'
#         404:
#           description: No users found for the provided mask
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/schemas/Error'
#         500:
#           description: Unexpected Error. Oops! Something went wrong! X/
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/schemas/Error'
#   /search_by_login:
#     get:
#       summary: Поиск пользователя по  логину
#       parameters:
#       - name: login
#         description: Логин
#         in: query
#         required: true
#         schema:
#           type: string      
#       responses:
#         '200':
#           description: Found users for the provided login
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/schemas/users'
#         404:
#           description: No users found for the provided login
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/schemas/Error'
#         500:
#           description: Unexpected Error. Oops! Something went wrong! X/
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/schemas/Error'
#   /auth:
#     get:
#       summary: Проверка аутентификации
#       responses:
#         '200':
#           description: User ID
#           content:
#             application/json:
#               schema:
#                type: string
#         401:
#           description: Not authorized
#           content:
#             application/json:
#               schema:
#                 type: string
#   /user:
#     get:
#       summary: Вывод информации о пользователе
#       parameters:
#       - name: id
#         description: Уникальный id пользователя
#         in: query
#         required: true
#         schema:
#           $ref: '#/components/schemas/user_id'
#       responses:
#         '200':
#           description: User Found
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/schemas/user'
#         404:
#           description: User Was Not Found
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/schemas/Error'
#         500:
#           description: Unexpected Error. Oops! Something went wrong! X/
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/schemas/Error'
#     post:
#       summary: Добавление нового пользователя
#       parameters:
#       - name: first_name
#         description: Имя пользователя
#         in: query
#         required: true
#         schema:
#           type: string
#       - name: last_name
#         description: Фамилия пользователя
#         in: query
#         required: true
#         schema:
#           type: string
#       - name: email
#         description: e-mail пользователя
#         in: query
#         required: true
#         schema:
#           type: string
#       - name: birthday
#         description: Дата дня рождения пользователя 
#         in: query
#         required: true
#         schema:
#           type: string
#       - name: login
#         description: login пользователя
#         in: query
#         required: true
#         schema:
#           type: string
#       - name: password
#         description: пароль пользователя
#         in: query
#         required: true
#         schema:
#           type: string
#       responses:
#         '200':
#           description: ID of freshly registered user
#           content:
#             application/json:
#               schema:
#                 type: integer
#         404:
#           description: Registration Error
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/schemas/Error'
#         500:
#           description: Unexpected Error. Oops! Something went wrong! X/
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/schemas/Error'
# components:
#   schemas:
#     user_id:
#       description: Уникальный id пользователя
#       type: integer
#     users:
#       type: array
#       items:
#         $ref: '#/components/schemas/user'
#     user:
#       type: object
#       required:
#         - id
#         - first_name
#         - last_name
#         - email
#         - birthday
#         - login
#         - password
#       properties:
#         id:
#           $ref: '#/components/schemas/user_id'
#         first_name:
#           type: string
#         last_name:
#           type: string
#         email:
#           type: string
#         birthday:
#           type: string
#         login:
#           type: string
#         password:
#           type: string
#     Error:
#       type: object
#       required:
#         - message
#       properties:
#         message:
#           description: An Error Occured. Unexpected Error. Oops! Something went wrong! X/
#           type: string
#   securitySchemes:
#       basicAuth:     
#         type: http
#         scheme: basic
# security:
#   - basicAuth: []